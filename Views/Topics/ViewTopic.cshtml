@using MongoDB.Bson;
@using System.Linq;
@using static Topics.Database.Account;
@model ViewTopicViewModel
@{
	try { ViewData["Title"] = Model.TopicData["title"]; }
	catch {}
}

@if (Model.TopicData["result"] == "error")
{
	<script>window.location.href = '/Home/SignIn';</script>
} else
{
	var author = Model.TopicData["author"];
	<div class="card bg-black-3 post rounded-corners">
		<div class="bg-black-3 card-title text-light padding-md rounded-corners">
			<div class="circular-landscape-md" style="background-image: url('@Model.TopicData["profile_picture"]')"></div>
			<p><a class='text-light' href='/Home/ViewProfile?user=@author'>@author</a></p>
			<b class="text-success">@Model.TopicData["title"]</b><br>
			<small class="text-secondary">@Model.TopicData["date"]</small>
		</div>
		<div class="card-body bg-black-2b rounded-corners">
			<p id="0" class="post-content">
				@Model.TopicData["content"]
			</p>
		</div>
	</div>
	<br>
	<p>
		@Model.Comments.LongCount() comments
		@if (Model.Comments.LongCount() > 0)
		{
			<small class="text-secondary"> • Last comment on @Model.Comments[0]["date"].AsString</small>
		}
	</p>
	<br>
	int i = 0;
	foreach (BsonDocument document in @Model.Comments)
	{
		i++;
		if (!(await GetProperty(document["author"].AsString, "user") == ""))
		{
			var comment_author = document["author"].AsString;
			<div id="@document["author"].AsString" class="card post bg-black-3 rounded-borders">
				<div>
					<div class="card-body bg-black-3 rounded-corners ">
						<div class="circular-landscape-sm" style="background-image: url('@await GetProperty(document["author"].AsString, "profile_picture")')"></div>
						<p><a class='text-light' href='/Home/ViewProfile?user=@comment_author'>@comment_author</a><small class="text-secondary"> • @document["date"].AsString</small></p>
						<p id="@i" class="post-content">@document["content"].AsString</p>
					</div>
				</div>
			</div>
			<br>
		}
	}
	<br>
	<form id="verify" method="POST" asp-action="Comment" asp-antiforgery=false class="md-form">
		<textarea id="content" name="comment" placeholder="Type a comment" class="form-control bg-black-3 border-none"></textarea>
		<input name="user" class="username" hidden>
		<input name="token" class="token" hidden>
		<input name="topicId" value="@Model.TopicData["id"]" hidden>
		<br>
		<button class="btn btn-primary">Comment</button>
		<button type="button" id="preview-button" class="btn btn-primary">Preview</button>
		<br><br>
		<div style="display:none" id="preview-area" class="card post bg-black-3 rounded-borders">
			<div>
				<div class="card-body bg-black-3 rounded-corners ">
					<div id="pfp" class="circular-landscape-sm"></div>
					<p id="preview-author"><small class="text-secondary">• Just now</small></p>
					<p id="preview-content" class="post-content"> </p>
				</div>
			</div>
		</div>
	</form>
	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="/js/view-topic.js" type="module"></script>
}